
JMM的一些特性:
1.原子性:
	原子性是指的一个操作不能中断,即使在多线程一起执行的嗓唱,一个操作一旦开始,就不会被别的线程干扰.  比如一个静态变量int I ; 俩个线程同时为ta赋值,t1 set i=1; t2 set I =-1; 那么这个i,要么是1要么是-1. 这就是原子性.
2.可见性:
	可见性指的当一个线程修改了某一个共享变量的值,其他线程能能够立即知道这个修改.
	在串行中不会出现这个问题的,但是在并行系统中,就很有可能出现这个问题了.在cpu1和CPU2上面各运行一个线程,他们共享变量t,由于编译器优化的缘故,在cpu1上的线程将变量t进行了优化,将其缓存在cache或者寄存器中.这种情况下,如果在cpu2上的某个线程修改了t的值,那么cpu1上的线程可能无法意识到这个改动,依然读取cache或者寄存器里面的旧值.
3.有序性
	有序性,对于一个线程的执行代码而言,我们总是习惯性的以为代码是从先到后,从上到下的执行.给人的感觉确实如此.但是 我们忽略了一个指令重排序的问题.





